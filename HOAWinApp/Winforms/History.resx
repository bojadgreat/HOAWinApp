<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="histPicBoxX.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAA9pJREFUWEftl/tvFFUcxRsDaSNgi4iEIlBpa5qCFmIJrxqK4VFAwCAEiBSMgq2F
        UkAKpRQKlEfRBRR5F5RHFKqVR4TfTOAHE/8GrZEgBJsubnd2ntsCh+935q7s3rYJ2Z2GhMxJTjaZe+ec
        z87OnTub5MmTJ0+enlNV9U5JJqc8pZPFaT0rKsoLvph2OdjvZVPJyIYynJ0FZRh5aCZ5BJTX2K9DGcLO
        gJKegeArg0HnmeSfOEPEuatryX1XKZk5HeaOXWj/5brjy1fQ/mMTwt9fQPjMOYQbvoV17ASsQ4dh7f8K
        Zv2XMOv2wNy2A/qKUoRy8xi0g7JKRKw7osB5obx8tDddIqirDtQPFxE+ex7hUxGoIw7UPoLatRdm7U6Y
        1VthVG6GsXYDjNUV0EvKoOS8yZCgzNkiPjEVvNCrVzB1YLN19EQU1Hewjp+E9Q1BHfga1j7fE6gt22Bs
        JKh1DLWWoFZB/+RT6Ms+hr6kGOqUaTYguVlUJCa6Z6aq77yL8GmGaiCoozaU6vMhVE9Q2+sEVDWM9ZUw
        ygmqlKFKbKj7xcUILF4M7f0F0GbPg5KVGwEEZU8UNfGLQiq0BUtgHTwE64v9MHfXo213HYI3f0V7awvU
        n5ugl6+DUbqa7jMHSiWQ0LgCBA74YN2+hXuHffhnaDqC/Qb8DycAV4qa+EUhtdqiD8GLw6yphbFpC/x7
        diJaauNFaHPmO4sgbSDaqPx+dZUYdfT3uNExcAKwRtTELxtw7nwYn2+EsWY9jLJyBCsq8EANiWpHbZur
        7NKu4PhKt6TTFYyCcxVQnT4L+srPoH+0AvrS5eArqtZsxUPDEAiOGLIrOH/+2E5w7gLSImEo7YNF4Kup
        Fr0HJTsXgelFeKBpAqWzeMw/fkKXcGzXAEP5E6DNnAt12kyok6fau0SkpDtIPsZj0UCy3QMcOQbqpEJa
        mZPsbUwuCjWcFFhPxMfkebJdA6QtDqG33gbvv3IJ33fdKbJwurNrgEHa8PnFQH6OyXD8s8o/t3/5sphz
        ou0eYP9B9Hx7NSY8ULlBIDiK3HP+ohkxkI86OrqFdA9QCr6b84ZdHJG8IGTIh5aJu1kjYjLYPQbYPCrb
        LmUxCAPJc6Ih+fOvjJ57UJfKwfdSU/HHwlloPX8arQUFMWPRbi0sRMupI/iT5v77UmqnccouFjXxi0JG
        y8HsQJ80/Nenc6lsnhPo4jibsjNFTWKisBtyuAu+IeITF33TURSoSgWJWKUX4RwR744IcjwF35GK4vEd
        ysoXse6KvnUK/ZdYQyWN5N/Ivz+leW4jnVvGGSLOkydPnp69kpIeA0BlDM3C9r8nAAAAAElFTkSuQmCC
</value>
  </data>
</root>